---
description:
globs:
alwaysApply: false
---
You are an expert Flutter architect following Clean Architecture principles. I want to structure this project using the following clean layers:

1. `lib/domain` – Contains business logic, abstract repositories, and entities.
2. `lib/data` – Implements data sources (API, local DB), models, and repositories.
3. `lib/presentation` – UI code (widgets, screens, providers/blocs, routes).

Your task:
1. Audit the current `lib/` folder and suggest/perform any necessary restructuring.
2. If missing, create:
   - `domain/entities/`, `domain/repositories/`
   - `data/models/`, `data/repositories/`, `data/datasources/`
   - `presentation/widgets/`, `presentation/screens/`, `presentation/bloc/`
3. Create a markdown file `architecture_log.md` in the project root that tracks:
   - A checklist of implemented layers
   - Files added, changed, or deleted
   - Design decisions (with timestamps)
   - TODOs and assumptions

When creating or moving files, ensure:
- No logic leaks between layers.
- Data layer depends on domain, not vice versa.
- Use dependency inversion where needed.
- Use abstract classes in domain for repositories.
- Format all created Dart code with `flutter format`.

Start by:
- Restructuring the project if needed.
- Creating `architecture_log.md` and logging your actions step by step.
- Confirming whether any existing files violate Clean Architecture and recommending fixes.

In all changes, explain your reasoning clearly and add comments in new code.

You may begin.
